name: Build 银狐Winos C++ Solutions

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build All Solutions in 银狐Winos
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup Visual Studio Developer Command Prompt
      uses: egor-tensin/vs-shell@v2

    - name: Build all .sln files (with Chinese path + logs)
      shell: pwsh
      run: |
        chcp 65001 > $null
        $root = (Get-Location).Path
        $artifacts = Join-Path $root "artifacts"
        $logFile = Join-Path $root "build.log"

        Write-Host "📁 当前工作目录: $root"
        Write-Host "📄 日志文件路径: $logFile"
        Write-Host "📦 构建产物路径: $artifacts"

        # 保证清理旧文件
        if (Test-Path $artifacts) { Remove-Item $artifacts -Recurse -Force }
        New-Item -ItemType Directory -Path $artifacts | Out-Null
        if (Test-Path $logFile) { Remove-Item $logFile }

        Write-Host "🔍 正在扫描 demo 目录下的所有 .sln..." -ForegroundColor Cyan
        $solutionPaths = Get-ChildItem -Path "银狐Winos" -Recurse -Filter *.sln | ForEach-Object { $_.FullName }

        if (-not $solutionPaths) {
          Write-Host "⚠️ 没有找到任何 .sln 文件！" -ForegroundColor Yellow
          exit 1
        }

        foreach ($sln in $solutionPaths) {
          Write-Host "🧱 开始构建: $sln" -ForegroundColor Cyan
          "==== 构建 $sln ====" | Out-File -Append $logFile -Encoding UTF8
          msbuild "`"$sln`"" /p:Configuration=Release /p:Platform=x64 /m /verbosity:minimal 2>&1 | Tee-Object -FilePath $logFile -Append

          if ($LASTEXITCODE -ne 0) {
            Write-Host "❌ 编译失败: $sln" -ForegroundColor Red
            exit 1
          } else {
            Write-Host "✅ 编译成功: $sln" -ForegroundColor Green
          }
        }

        Write-Host "📦 收集编译产物..." -ForegroundColor Cyan
        $releaseDirs = Get-ChildItem -Path "demo" -Recurse -Directory | Where-Object { $_.Name -match '^(Release|x64|x86)$' }

        foreach ($dir in $releaseDirs) {
          Write-Host "➡️ 复制: $($dir.FullName)"
          Copy-Item -Path $dir.FullName -Destination $artifacts -Recurse -Force
        }

        Write-Host "✅ 文件结构预览：" -ForegroundColor Cyan
        Get-ChildItem -Path $artifacts -Recurse | Select-Object FullName

        Write-Host "✅ 完成！"

    - name: Upload Artifacts and Logs
      uses: actions/upload-artifact@v4
      with:
        name: Winos-build-artifacts
        path: |
          artifacts/**
          build.log
