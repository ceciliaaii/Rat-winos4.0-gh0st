name: Build 银狐Winos C++ Solutions

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build All Solutions in 银狐Winos
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup Visual Studio Developer Command Prompt
      uses: egor-tensin/vs-shell@v2

    - name: Build all .sln files (safe path + upgrade toolset)
      shell: pwsh
      run: |
        chcp 65001 > $null
        Write-Host "🔍 正在编译所有解决方案..." -ForegroundColor Cyan

        $solutionPaths = Get-ChildItem -Path "demo" -Recurse -Filter *.sln | ForEach-Object { $_.FullName }

        if (-not (Test-Path artifacts)) { New-Item -ItemType Directory -Path artifacts | Out-Null }

        $logFile = "build.log"
        if (Test-Path $logFile) { Remove-Item $logFile }

        foreach ($sln in $solutionPaths) {
          $slnDir = Split-Path $sln
          $slnFile = Split-Path $sln -Leaf
          Push-Location $slnDir

          Write-Host "🛠️ 正在检查并升级工具集: $sln" -ForegroundColor Yellow
          Get-ChildItem -Recurse -Filter *.vcxproj | ForEach-Object {
            (Get-Content $_.FullName -Raw) -replace '<PlatformToolset>v100</PlatformToolset>', '<PlatformToolset>v143</PlatformToolset>' |
              Set-Content $_.FullName -Encoding UTF8
          }

          Write-Host "🧱 开始构建: $slnFile" -ForegroundColor Cyan
          "==== 构建 $slnFile ====" | Out-File -Append ../$logFile -Encoding UTF8
          msbuild $slnFile /p:Configuration=Release /p:Platform=x64 /m /verbosity:minimal 2>&1 | Tee-Object -FilePath ../$logFile -Append
          $code = $LASTEXITCODE
          Pop-Location

          if ($code -ne 0) {
            Write-Host "❌ 编译失败: $sln" -ForegroundColor Red
            exit 1
          } else {
            Write-Host "✅ 编译成功: $sln" -ForegroundColor Green
          }
        }

        Write-Host "📦 收集编译产物..." -ForegroundColor Cyan
        $releaseDirs = Get-ChildItem -Path "demo" -Recurse -Directory | Where-Object { $_.Name -match '^(Release|x64|x86)$' }

        foreach ($dir in $releaseDirs) {
          Write-Host "➡️ 添加目录: $($dir.FullName)"
          Copy-Item -Path $dir.FullName -Destination artifacts -Recurse -Force
        }

    - name: Upload Artifacts and Logs
      uses: actions/upload-artifact@v4
      with:
        name: Winos-build-artifacts
        path: |
          artifacts
          build.log
